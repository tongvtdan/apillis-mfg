// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

// Use environment variables for flexible configuration
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://ynhgxwnkpbpzwbtzrzka.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0";

// Validate configuration in production
if (import.meta.env.PROD) {
  if (!import.meta.env.VITE_SUPABASE_URL) {
    throw new Error('VITE_SUPABASE_URL environment variable is required in production');
  }
  if (!import.meta.env.VITE_SUPABASE_ANON_KEY) {
    throw new Error('VITE_SUPABASE_ANON_KEY environment variable is required in production');
  }
}

// Debug logging
console.log('üîó Supabase Client Configuration:');
console.log('Environment:', import.meta.env.MODE || 'development');
console.log('Connecting to URL:', SUPABASE_URL);
console.log('Using key prefix:', SUPABASE_PUBLISHABLE_KEY.substring(0, 20) + '...');

// Warn in production if using fallback values
if (import.meta.env.PROD && (!import.meta.env.VITE_SUPABASE_URL || !import.meta.env.VITE_SUPABASE_ANON_KEY)) {
  console.error('‚ùå PRODUCTION ERROR: Missing required Supabase environment variables. Please set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY in Vercel.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
  db: {
    schema: 'public',
  },
  global: {
    headers: {
      'X-Client-Info': 'factory-pulse-web',
    },
  },
  // Add timeout configuration for storage operations
  storage: {
    // Increase timeout for file uploads
    timeout: 60000, // 60 seconds
  },
});